
Static_IND_V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000400  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000454  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000484  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b8a  00000000  00000000  00000534  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000752  00000000  00000000  000010be  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000054c  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  00001d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047b  00000000  00000000  00001e64  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000044d  00000000  00000000  000022df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e0       	ldi	r30, 0x00	; 0
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 aa 01 	call	0x354	; 0x354 <main>
  9e:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <gpioInitPinModeAndValue>:
	switch(port) {
		case PB: PINB |= (1 << pin);
		case PC: PINC |= (1 << pin);
		case PD: PIND |= (1 << pin);
	}
}
  a6:	82 30       	cpi	r24, 0x02	; 2
  a8:	c9 f1       	breq	.+114    	; 0x11c <gpioInitPinModeAndValue+0x76>
  aa:	83 30       	cpi	r24, 0x03	; 3
  ac:	09 f4       	brne	.+2      	; 0xb0 <gpioInitPinModeAndValue+0xa>
  ae:	69 c0       	rjmp	.+210    	; 0x182 <gpioInitPinModeAndValue+0xdc>
  b0:	81 30       	cpi	r24, 0x01	; 1
  b2:	09 f0       	breq	.+2      	; 0xb6 <gpioInitPinModeAndValue+0x10>
  b4:	98 c0       	rjmp	.+304    	; 0x1e6 <gpioInitPinModeAndValue+0x140>
  b6:	41 11       	cpse	r20, r1
  b8:	0d c0       	rjmp	.+26     	; 0xd4 <gpioInitPinModeAndValue+0x2e>
  ba:	34 b1       	in	r19, 0x04	; 4
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	06 2e       	mov	r0, r22
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <gpioInitPinModeAndValue+0x22>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	0a 94       	dec	r0
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <gpioInitPinModeAndValue+0x1e>
  cc:	80 95       	com	r24
  ce:	83 23       	and	r24, r19
  d0:	84 b9       	out	0x04, r24	; 4
  d2:	0b c0       	rjmp	.+22     	; 0xea <gpioInitPinModeAndValue+0x44>
  d4:	34 b1       	in	r19, 0x04	; 4
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	06 2e       	mov	r0, r22
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <gpioInitPinModeAndValue+0x3c>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	0a 94       	dec	r0
  e4:	e2 f7       	brpl	.-8      	; 0xde <gpioInitPinModeAndValue+0x38>
  e6:	83 2b       	or	r24, r19
  e8:	84 b9       	out	0x04, r24	; 4
  ea:	22 23       	and	r18, r18
  ec:	59 f0       	breq	.+22     	; 0x104 <gpioInitPinModeAndValue+0x5e>
  ee:	25 b1       	in	r18, 0x05	; 5
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <gpioInitPinModeAndValue+0x54>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <gpioInitPinModeAndValue+0x50>
  fe:	82 2b       	or	r24, r18
 100:	85 b9       	out	0x05, r24	; 5
 102:	08 95       	ret
 104:	25 b1       	in	r18, 0x05	; 5
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <gpioInitPinModeAndValue+0x6a>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <gpioInitPinModeAndValue+0x66>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	85 b9       	out	0x05, r24	; 5
 11a:	08 95       	ret
 11c:	41 11       	cpse	r20, r1
 11e:	0d c0       	rjmp	.+26     	; 0x13a <gpioInitPinModeAndValue+0x94>
 120:	37 b1       	in	r19, 0x07	; 7
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	06 2e       	mov	r0, r22
 128:	02 c0       	rjmp	.+4      	; 0x12e <gpioInitPinModeAndValue+0x88>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <gpioInitPinModeAndValue+0x84>
 132:	80 95       	com	r24
 134:	83 23       	and	r24, r19
 136:	87 b9       	out	0x07, r24	; 7
 138:	0b c0       	rjmp	.+22     	; 0x150 <gpioInitPinModeAndValue+0xaa>
 13a:	37 b1       	in	r19, 0x07	; 7
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	06 2e       	mov	r0, r22
 142:	02 c0       	rjmp	.+4      	; 0x148 <gpioInitPinModeAndValue+0xa2>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <gpioInitPinModeAndValue+0x9e>
 14c:	83 2b       	or	r24, r19
 14e:	87 b9       	out	0x07, r24	; 7
 150:	22 23       	and	r18, r18
 152:	59 f0       	breq	.+22     	; 0x16a <gpioInitPinModeAndValue+0xc4>
 154:	28 b1       	in	r18, 0x08	; 8
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <gpioInitPinModeAndValue+0xba>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <gpioInitPinModeAndValue+0xb6>
 164:	82 2b       	or	r24, r18
 166:	88 b9       	out	0x08, r24	; 8
 168:	08 95       	ret
 16a:	28 b1       	in	r18, 0x08	; 8
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <gpioInitPinModeAndValue+0xd0>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <gpioInitPinModeAndValue+0xcc>
 17a:	80 95       	com	r24
 17c:	82 23       	and	r24, r18
 17e:	88 b9       	out	0x08, r24	; 8
 180:	08 95       	ret
 182:	41 11       	cpse	r20, r1
 184:	0d c0       	rjmp	.+26     	; 0x1a0 <gpioInitPinModeAndValue+0xfa>
 186:	3a b1       	in	r19, 0x0a	; 10
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	06 2e       	mov	r0, r22
 18e:	02 c0       	rjmp	.+4      	; 0x194 <gpioInitPinModeAndValue+0xee>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <gpioInitPinModeAndValue+0xea>
 198:	80 95       	com	r24
 19a:	83 23       	and	r24, r19
 19c:	8a b9       	out	0x0a, r24	; 10
 19e:	0b c0       	rjmp	.+22     	; 0x1b6 <gpioInitPinModeAndValue+0x110>
 1a0:	3a b1       	in	r19, 0x0a	; 10
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	06 2e       	mov	r0, r22
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <gpioInitPinModeAndValue+0x108>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	0a 94       	dec	r0
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <gpioInitPinModeAndValue+0x104>
 1b2:	83 2b       	or	r24, r19
 1b4:	8a b9       	out	0x0a, r24	; 10
 1b6:	22 23       	and	r18, r18
 1b8:	59 f0       	breq	.+22     	; 0x1d0 <gpioInitPinModeAndValue+0x12a>
 1ba:	2b b1       	in	r18, 0x0b	; 11
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <gpioInitPinModeAndValue+0x120>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <gpioInitPinModeAndValue+0x11c>
 1ca:	82 2b       	or	r24, r18
 1cc:	8b b9       	out	0x0b, r24	; 11
 1ce:	08 95       	ret
 1d0:	2b b1       	in	r18, 0x0b	; 11
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <gpioInitPinModeAndValue+0x136>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <gpioInitPinModeAndValue+0x132>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8b b9       	out	0x0b, r24	; 11
 1e6:	08 95       	ret

000001e8 <gpioSetPin>:


void gpioSetPin(uint8_t port, uint8_t pin, uint8_t value) {
	switch(port) {
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	f1 f0       	breq	.+60     	; 0x228 <gpioSetPin+0x40>
 1ec:	83 30       	cpi	r24, 0x03	; 3
 1ee:	a9 f1       	breq	.+106    	; 0x25a <gpioSetPin+0x72>
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <gpioSetPin+0xe>
 1f4:	4a c0       	rjmp	.+148    	; 0x28a <gpioSetPin+0xa2>
		case PB: PORTB = ((value != 0) ? (PORTB | (1 << pin)) : (PORTB & (~(1 << pin)))); return;
 1f6:	44 23       	and	r20, r20
 1f8:	51 f0       	breq	.+20     	; 0x20e <gpioSetPin+0x26>
 1fa:	25 b1       	in	r18, 0x05	; 5
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <gpioSetPin+0x1e>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <gpioSetPin+0x1a>
 20a:	82 2b       	or	r24, r18
 20c:	0b c0       	rjmp	.+22     	; 0x224 <gpioSetPin+0x3c>
 20e:	95 b1       	in	r25, 0x05	; 5
 210:	21 e0       	ldi	r18, 0x01	; 1
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <gpioSetPin+0x32>
 216:	22 0f       	add	r18, r18
 218:	33 1f       	adc	r19, r19
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <gpioSetPin+0x2e>
 21e:	82 2f       	mov	r24, r18
 220:	80 95       	com	r24
 222:	89 23       	and	r24, r25
 224:	85 b9       	out	0x05, r24	; 5
 226:	08 95       	ret
		case PC: PORTC = ((value != 0) ? (PORTC | (1 << pin)) : (PORTC & (~(1 << pin)))); return;
 228:	44 23       	and	r20, r20
 22a:	51 f0       	breq	.+20     	; 0x240 <gpioSetPin+0x58>
 22c:	28 b1       	in	r18, 0x08	; 8
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <gpioSetPin+0x50>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <gpioSetPin+0x4c>
 23c:	82 2b       	or	r24, r18
 23e:	0b c0       	rjmp	.+22     	; 0x256 <gpioSetPin+0x6e>
 240:	98 b1       	in	r25, 0x08	; 8
 242:	21 e0       	ldi	r18, 0x01	; 1
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <gpioSetPin+0x64>
 248:	22 0f       	add	r18, r18
 24a:	33 1f       	adc	r19, r19
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <gpioSetPin+0x60>
 250:	82 2f       	mov	r24, r18
 252:	80 95       	com	r24
 254:	89 23       	and	r24, r25
 256:	88 b9       	out	0x08, r24	; 8
 258:	08 95       	ret
		case PD: PORTD = ((value != 0) ? (PORTD | (1 << pin)) : (PORTD & (~(1 << pin)))); return;
 25a:	44 23       	and	r20, r20
 25c:	51 f0       	breq	.+20     	; 0x272 <gpioSetPin+0x8a>
 25e:	2b b1       	in	r18, 0x0b	; 11
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <gpioSetPin+0x82>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <gpioSetPin+0x7e>
 26e:	82 2b       	or	r24, r18
 270:	0b c0       	rjmp	.+22     	; 0x288 <gpioSetPin+0xa0>
 272:	9b b1       	in	r25, 0x0b	; 11
 274:	21 e0       	ldi	r18, 0x01	; 1
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <gpioSetPin+0x96>
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <gpioSetPin+0x92>
 282:	82 2f       	mov	r24, r18
 284:	80 95       	com	r24
 286:	89 23       	and	r24, r25
 288:	8b b9       	out	0x0b, r24	; 11
 28a:	08 95       	ret

0000028c <show_digit_str>:
	gpioInitPinModeAndValue( seg->_PORT_E,   seg->_pin_E,   MODE_OUTPUT,  INIT_STATE);
	gpioInitPinModeAndValue( seg->_PORT_F,   seg->_pin_F,   MODE_OUTPUT,  INIT_STATE);
	gpioInitPinModeAndValue( seg->_PORT_G,   seg->_pin_G,   MODE_OUTPUT,  INIT_STATE);
	gpioInitPinModeAndValue( seg->_PORT_DP,  seg->_pin_DP,  MODE_OUTPUT,  INIT_STATE);
	*/
}
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	eb 01       	movw	r28, r22
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	68 81       	ld	r22, Y
 296:	88 85       	ldd	r24, Y+8	; 0x08
 298:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 29c:	40 e0       	ldi	r20, 0x00	; 0
 29e:	69 81       	ldd	r22, Y+1	; 0x01
 2a0:	89 85       	ldd	r24, Y+9	; 0x09
 2a2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2a6:	40 e0       	ldi	r20, 0x00	; 0
 2a8:	6a 81       	ldd	r22, Y+2	; 0x02
 2aa:	8a 85       	ldd	r24, Y+10	; 0x0a
 2ac:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	6b 81       	ldd	r22, Y+3	; 0x03
 2b4:	8b 85       	ldd	r24, Y+11	; 0x0b
 2b6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	6c 81       	ldd	r22, Y+4	; 0x04
 2be:	8c 85       	ldd	r24, Y+12	; 0x0c
 2c0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	6d 81       	ldd	r22, Y+5	; 0x05
 2c8:	8d 85       	ldd	r24, Y+13	; 0x0d
 2ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	6e 81       	ldd	r22, Y+6	; 0x06
 2d2:	8e 85       	ldd	r24, Y+14	; 0x0e
 2d4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	6f 81       	ldd	r22, Y+7	; 0x07
 2dc:	8f 85       	ldd	r24, Y+15	; 0x0f
 2de:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <init_segments>:
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	ec 01       	movw	r28, r24
 2ee:	21 e0       	ldi	r18, 0x01	; 1
 2f0:	41 e0       	ldi	r20, 0x01	; 1
 2f2:	68 81       	ld	r22, Y
 2f4:	88 85       	ldd	r24, Y+8	; 0x08
 2f6:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 2fa:	21 e0       	ldi	r18, 0x01	; 1
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	69 81       	ldd	r22, Y+1	; 0x01
 300:	89 85       	ldd	r24, Y+9	; 0x09
 302:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 306:	21 e0       	ldi	r18, 0x01	; 1
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	6a 81       	ldd	r22, Y+2	; 0x02
 30c:	8a 85       	ldd	r24, Y+10	; 0x0a
 30e:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 312:	21 e0       	ldi	r18, 0x01	; 1
 314:	41 e0       	ldi	r20, 0x01	; 1
 316:	6b 81       	ldd	r22, Y+3	; 0x03
 318:	8b 85       	ldd	r24, Y+11	; 0x0b
 31a:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 31e:	21 e0       	ldi	r18, 0x01	; 1
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	6c 81       	ldd	r22, Y+4	; 0x04
 324:	8c 85       	ldd	r24, Y+12	; 0x0c
 326:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	41 e0       	ldi	r20, 0x01	; 1
 32e:	6d 81       	ldd	r22, Y+5	; 0x05
 330:	8d 85       	ldd	r24, Y+13	; 0x0d
 332:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 336:	21 e0       	ldi	r18, 0x01	; 1
 338:	41 e0       	ldi	r20, 0x01	; 1
 33a:	6e 81       	ldd	r22, Y+6	; 0x06
 33c:	8e 85       	ldd	r24, Y+14	; 0x0e
 33e:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 342:	21 e0       	ldi	r18, 0x01	; 1
 344:	41 e0       	ldi	r20, 0x01	; 1
 346:	6f 81       	ldd	r22, Y+7	; 0x07
 348:	8f 85       	ldd	r24, Y+15	; 0x0f
 34a:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioInitPinModeAndValue>
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	08 95       	ret

00000354 <main>:




int main(void)
{
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	cd b7       	in	r28, 0x3d	; 61
 35a:	de b7       	in	r29, 0x3e	; 62
 35c:	a0 97       	sbiw	r28, 0x20	; 32
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	f8 94       	cli
 362:	de bf       	out	0x3e, r29	; 62
 364:	0f be       	out	0x3f, r0	; 63
 366:	cd bf       	out	0x3d, r28	; 61
	*/

	
	struct Segments seg_1;
		
	seg_1._pin_A = pin_A;
 368:	19 82       	std	Y+1, r1	; 0x01
	seg_1._pin_B = pin_B;
 36a:	ff 24       	eor	r15, r15
 36c:	f3 94       	inc	r15
 36e:	fa 82       	std	Y+2, r15	; 0x02
	seg_1._pin_C = pin_C;
 370:	02 e0       	ldi	r16, 0x02	; 2
 372:	0b 83       	std	Y+3, r16	; 0x03
	seg_1._pin_D = pin_D;
 374:	13 e0       	ldi	r17, 0x03	; 3
 376:	1c 83       	std	Y+4, r17	; 0x04
	seg_1._pin_E = pin_E;
 378:	68 94       	set
 37a:	bb 24       	eor	r11, r11
 37c:	b2 f8       	bld	r11, 2
 37e:	bd 82       	std	Y+5, r11	; 0x05
	seg_1._pin_F = pin_F;
 380:	0f 2e       	mov	r0, r31
 382:	f5 e0       	ldi	r31, 0x05	; 5
 384:	cf 2e       	mov	r12, r31
 386:	f0 2d       	mov	r31, r0
 388:	ce 82       	std	Y+6, r12	; 0x06
	seg_1._pin_G = pin_G;
 38a:	0f 2e       	mov	r0, r31
 38c:	f6 e0       	ldi	r31, 0x06	; 6
 38e:	df 2e       	mov	r13, r31
 390:	f0 2d       	mov	r31, r0
 392:	df 82       	std	Y+7, r13	; 0x07
	seg_1._pin_DP = pin_DP;
 394:	0f 2e       	mov	r0, r31
 396:	f7 e0       	ldi	r31, 0x07	; 7
 398:	ef 2e       	mov	r14, r31
 39a:	f0 2d       	mov	r31, r0
 39c:	e8 86       	std	Y+8, r14	; 0x08
		
	seg_1._PORT_A = PORT_A;
 39e:	19 87       	std	Y+9, r17	; 0x09
	seg_1._PORT_B = PORT_B;
 3a0:	1a 87       	std	Y+10, r17	; 0x0a
	seg_1._PORT_C = PORT_C;
 3a2:	1b 87       	std	Y+11, r17	; 0x0b
	seg_1._PORT_D = PORT_D;
 3a4:	1c 87       	std	Y+12, r17	; 0x0c
	seg_1._PORT_E = PORT_E;
 3a6:	1d 87       	std	Y+13, r17	; 0x0d
	seg_1._PORT_F = PORT_F;
 3a8:	1e 87       	std	Y+14, r17	; 0x0e
	seg_1._PORT_G = PORT_G;
 3aa:	1f 87       	std	Y+15, r17	; 0x0f
	seg_1._PORT_DP = PORT_DP;
 3ac:	18 8b       	std	Y+16, r17	; 0x10
	
	init_segments(&seg_1);
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	0e 94 74 01 	call	0x2e8	; 0x2e8 <init_segments>
	show_digit_str(0, &seg_1);
 3b6:	be 01       	movw	r22, r28
 3b8:	6f 5f       	subi	r22, 0xFF	; 255
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 46 01 	call	0x28c	; 0x28c <show_digit_str>



	struct Segments seg_2;

	seg_2._pin_A = 4;
 3c4:	b9 8a       	std	Y+17, r11	; 0x11
	seg_2._pin_B = 5;
 3c6:	ca 8a       	std	Y+18, r12	; 0x12
	seg_2._pin_C = 6;
 3c8:	db 8a       	std	Y+19, r13	; 0x13
	seg_2._pin_D = 7;
 3ca:	ec 8a       	std	Y+20, r14	; 0x14
	seg_2._pin_E = 0;
 3cc:	1d 8a       	std	Y+21, r1	; 0x15
	seg_2._pin_F = 1;
 3ce:	fe 8a       	std	Y+22, r15	; 0x16
	seg_2._pin_G = 2;
 3d0:	0f 8b       	std	Y+23, r16	; 0x17
	seg_2._pin_DP = 3;
 3d2:	18 8f       	std	Y+24, r17	; 0x18

	seg_2._PORT_A = PB;
 3d4:	f9 8e       	std	Y+25, r15	; 0x19
	seg_2._PORT_B = PB;
 3d6:	fa 8e       	std	Y+26, r15	; 0x1a
	seg_2._PORT_C = PB;
 3d8:	fb 8e       	std	Y+27, r15	; 0x1b
	seg_2._PORT_D = PB;
 3da:	fc 8e       	std	Y+28, r15	; 0x1c
	seg_2._PORT_E = PC;
 3dc:	0d 8f       	std	Y+29, r16	; 0x1d
	seg_2._PORT_F = PC;
 3de:	0e 8f       	std	Y+30, r16	; 0x1e
	seg_2._PORT_G = PC;
 3e0:	0f 8f       	std	Y+31, r16	; 0x1f
	seg_2._PORT_DP = PC;
 3e2:	08 a3       	std	Y+32, r16	; 0x20

	init_segments(&seg_2);
 3e4:	ce 01       	movw	r24, r28
 3e6:	41 96       	adiw	r24, 0x11	; 17
 3e8:	0e 94 74 01 	call	0x2e8	; 0x2e8 <init_segments>
	show_digit_str(0, &seg_2);
 3ec:	be 01       	movw	r22, r28
 3ee:	6f 5e       	subi	r22, 0xEF	; 239
 3f0:	7f 4f       	sbci	r23, 0xFF	; 255
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0e 94 46 01 	call	0x28c	; 0x28c <show_digit_str>
 3fa:	ff cf       	rjmp	.-2      	; 0x3fa <main+0xa6>

000003fc <_exit>:
 3fc:	f8 94       	cli

000003fe <__stop_program>:
 3fe:	ff cf       	rjmp	.-2      	; 0x3fe <__stop_program>
