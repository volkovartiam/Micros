
Run_LEDs_V3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000268  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008a3  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070a  00000000  00000000  00000c0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040d  00000000  00000000  00001319  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001728  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ff  00000000  00000000  0000178c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031f  00000000  00000000  00001b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001eaa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 08 01 	call	0x210	; 0x210 <main>
  78:	0c 94 32 01 	jmp	0x264	; 0x264 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <gpioSetPinMode>:

void gpioSetPin(uint8_t port, uint8_t pin, uint8_t value) {
    switch(port) {
        case PB: PORTB = ((value != 0) ? (PORTB | (1 << pin)) : (PORTB & (~(1 << pin)))); return;
        case PC: PORTC = ((value != 0) ? (PORTC | (1 << pin)) : (PORTC & (~(1 << pin)))); return;
        case PD: PORTD = ((value != 0) ? (PORTD | (1 << pin)) : (PORTD & (~(1 << pin)))); return;
  80:	82 30       	cpi	r24, 0x02	; 2
  82:	c9 f1       	breq	.+114    	; 0xf6 <gpioSetPinMode+0x76>
  84:	83 30       	cpi	r24, 0x03	; 3
  86:	09 f4       	brne	.+2      	; 0x8a <gpioSetPinMode+0xa>
  88:	69 c0       	rjmp	.+210    	; 0x15c <gpioSetPinMode+0xdc>
  8a:	81 30       	cpi	r24, 0x01	; 1
  8c:	09 f0       	breq	.+2      	; 0x90 <gpioSetPinMode+0x10>
  8e:	98 c0       	rjmp	.+304    	; 0x1c0 <gpioSetPinMode+0x140>
  90:	41 11       	cpse	r20, r1
  92:	0d c0       	rjmp	.+26     	; 0xae <gpioSetPinMode+0x2e>
  94:	34 b1       	in	r19, 0x04	; 4
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	06 2e       	mov	r0, r22
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <gpioSetPinMode+0x22>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	0a 94       	dec	r0
  a4:	e2 f7       	brpl	.-8      	; 0x9e <gpioSetPinMode+0x1e>
  a6:	80 95       	com	r24
  a8:	83 23       	and	r24, r19
  aa:	84 b9       	out	0x04, r24	; 4
  ac:	0b c0       	rjmp	.+22     	; 0xc4 <gpioSetPinMode+0x44>
  ae:	34 b1       	in	r19, 0x04	; 4
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	06 2e       	mov	r0, r22
  b6:	02 c0       	rjmp	.+4      	; 0xbc <gpioSetPinMode+0x3c>
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	0a 94       	dec	r0
  be:	e2 f7       	brpl	.-8      	; 0xb8 <gpioSetPinMode+0x38>
  c0:	83 2b       	or	r24, r19
  c2:	84 b9       	out	0x04, r24	; 4
  c4:	22 23       	and	r18, r18
  c6:	59 f0       	breq	.+22     	; 0xde <gpioSetPinMode+0x5e>
  c8:	25 b1       	in	r18, 0x05	; 5
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <gpioSetPinMode+0x54>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <gpioSetPinMode+0x50>
  d8:	82 2b       	or	r24, r18
  da:	85 b9       	out	0x05, r24	; 5
  dc:	08 95       	ret
  de:	25 b1       	in	r18, 0x05	; 5
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <gpioSetPinMode+0x6a>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <gpioSetPinMode+0x66>
  ee:	80 95       	com	r24
  f0:	82 23       	and	r24, r18
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	08 95       	ret
  f6:	41 11       	cpse	r20, r1
  f8:	0d c0       	rjmp	.+26     	; 0x114 <gpioSetPinMode+0x94>
  fa:	37 b1       	in	r19, 0x07	; 7
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	06 2e       	mov	r0, r22
 102:	02 c0       	rjmp	.+4      	; 0x108 <gpioSetPinMode+0x88>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	0a 94       	dec	r0
 10a:	e2 f7       	brpl	.-8      	; 0x104 <gpioSetPinMode+0x84>
 10c:	80 95       	com	r24
 10e:	83 23       	and	r24, r19
 110:	87 b9       	out	0x07, r24	; 7
 112:	0b c0       	rjmp	.+22     	; 0x12a <gpioSetPinMode+0xaa>
 114:	37 b1       	in	r19, 0x07	; 7
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	06 2e       	mov	r0, r22
 11c:	02 c0       	rjmp	.+4      	; 0x122 <gpioSetPinMode+0xa2>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <gpioSetPinMode+0x9e>
 126:	83 2b       	or	r24, r19
 128:	87 b9       	out	0x07, r24	; 7
 12a:	22 23       	and	r18, r18
 12c:	59 f0       	breq	.+22     	; 0x144 <gpioSetPinMode+0xc4>
 12e:	28 b1       	in	r18, 0x08	; 8
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <gpioSetPinMode+0xba>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <gpioSetPinMode+0xb6>
 13e:	82 2b       	or	r24, r18
 140:	88 b9       	out	0x08, r24	; 8
 142:	08 95       	ret
 144:	28 b1       	in	r18, 0x08	; 8
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <gpioSetPinMode+0xd0>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <gpioSetPinMode+0xcc>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	88 b9       	out	0x08, r24	; 8
 15a:	08 95       	ret
 15c:	41 11       	cpse	r20, r1
 15e:	0d c0       	rjmp	.+26     	; 0x17a <gpioSetPinMode+0xfa>
 160:	3a b1       	in	r19, 0x0a	; 10
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	06 2e       	mov	r0, r22
 168:	02 c0       	rjmp	.+4      	; 0x16e <gpioSetPinMode+0xee>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	0a 94       	dec	r0
 170:	e2 f7       	brpl	.-8      	; 0x16a <gpioSetPinMode+0xea>
 172:	80 95       	com	r24
 174:	83 23       	and	r24, r19
 176:	8a b9       	out	0x0a, r24	; 10
 178:	0b c0       	rjmp	.+22     	; 0x190 <gpioSetPinMode+0x110>
 17a:	3a b1       	in	r19, 0x0a	; 10
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	06 2e       	mov	r0, r22
 182:	02 c0       	rjmp	.+4      	; 0x188 <gpioSetPinMode+0x108>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	0a 94       	dec	r0
 18a:	e2 f7       	brpl	.-8      	; 0x184 <gpioSetPinMode+0x104>
 18c:	83 2b       	or	r24, r19
 18e:	8a b9       	out	0x0a, r24	; 10
 190:	22 23       	and	r18, r18
 192:	59 f0       	breq	.+22     	; 0x1aa <gpioSetPinMode+0x12a>
 194:	2b b1       	in	r18, 0x0b	; 11
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <gpioSetPinMode+0x120>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <gpioSetPinMode+0x11c>
 1a4:	82 2b       	or	r24, r18
 1a6:	8b b9       	out	0x0b, r24	; 11
 1a8:	08 95       	ret
 1aa:	2b b1       	in	r18, 0x0b	; 11
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <gpioSetPinMode+0x136>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <gpioSetPinMode+0x132>
 1ba:	80 95       	com	r24
 1bc:	82 23       	and	r24, r18
 1be:	8b b9       	out	0x0b, r24	; 11
 1c0:	08 95       	ret

000001c2 <gpioTogglePin>:
 1c2:	82 30       	cpi	r24, 0x02	; 2
 1c4:	79 f0       	breq	.+30     	; 0x1e4 <gpioTogglePin+0x22>
 1c6:	83 30       	cpi	r24, 0x03	; 3
 1c8:	c1 f0       	breq	.+48     	; 0x1fa <gpioTogglePin+0x38>
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	01 f5       	brne	.+64     	; 0x20e <gpioTogglePin+0x4c>
 1ce:	23 b1       	in	r18, 0x03	; 3
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	06 2e       	mov	r0, r22
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <gpioTogglePin+0x1a>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	0a 94       	dec	r0
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <gpioTogglePin+0x16>
 1e0:	82 2b       	or	r24, r18
 1e2:	83 b9       	out	0x03, r24	; 3
 1e4:	26 b1       	in	r18, 0x06	; 6
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	06 2e       	mov	r0, r22
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <gpioTogglePin+0x30>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	0a 94       	dec	r0
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <gpioTogglePin+0x2c>
 1f6:	82 2b       	or	r24, r18
 1f8:	86 b9       	out	0x06, r24	; 6
 1fa:	29 b1       	in	r18, 0x09	; 9
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <gpioTogglePin+0x44>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <gpioTogglePin+0x40>
 20a:	82 2b       	or	r24, r18
 20c:	89 b9       	out	0x09, r24	; 9
 20e:	08 95       	ret

00000210 <main>:
int main(void)
{
	int pins = 8;
	int repeat = 4;
	
	for(int pin = 0; pin < pins; pin++){
 210:	c0 e0       	ldi	r28, 0x00	; 0
 212:	d0 e0       	ldi	r29, 0x00	; 0
 214:	07 c0       	rjmp	.+14     	; 0x224 <main+0x14>
//		gpioSetPinMode(PD, 0, MODE_OUTPUT, LOW);
		gpioSetPinMode(PD, pin, MODE_OUTPUT, HIGH);
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	41 e0       	ldi	r20, 0x01	; 1
 21a:	6c 2f       	mov	r22, r28
 21c:	83 e0       	ldi	r24, 0x03	; 3
 21e:	0e 94 40 00 	call	0x80	; 0x80 <gpioSetPinMode>
int main(void)
{
	int pins = 8;
	int repeat = 4;
	
	for(int pin = 0; pin < pins; pin++){
 222:	21 96       	adiw	r28, 0x01	; 1
 224:	c8 30       	cpi	r28, 0x08	; 8
 226:	d1 05       	cpc	r29, r1
 228:	b4 f3       	brlt	.-20     	; 0x216 <main+0x6>
		gpioSetPinMode(PD, pin, MODE_OUTPUT, HIGH);
	}

    while (1) 
    {
		for(int pin = 0; pin < pins; pin++){		 
 22a:	00 e0       	ldi	r16, 0x00	; 0
 22c:	10 e0       	ldi	r17, 0x00	; 0
 22e:	16 c0       	rjmp	.+44     	; 0x25c <main+0x4c>
			for(int i = 0; i < repeat; i++){		
				gpioTogglePin(PD, pin);
 230:	60 2f       	mov	r22, r16
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <gpioTogglePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 238:	2f ef       	ldi	r18, 0xFF	; 255
 23a:	89 e6       	ldi	r24, 0x69	; 105
 23c:	98 e1       	ldi	r25, 0x18	; 24
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	80 40       	sbci	r24, 0x00	; 0
 242:	90 40       	sbci	r25, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <main+0x2e>
 246:	00 c0       	rjmp	.+0      	; 0x248 <main+0x38>
 248:	00 00       	nop
	}

    while (1) 
    {
		for(int pin = 0; pin < pins; pin++){		 
			for(int i = 0; i < repeat; i++){		
 24a:	21 96       	adiw	r28, 0x01	; 1
 24c:	02 c0       	rjmp	.+4      	; 0x252 <main+0x42>
 24e:	c0 e0       	ldi	r28, 0x00	; 0
 250:	d0 e0       	ldi	r29, 0x00	; 0
 252:	c4 30       	cpi	r28, 0x04	; 4
 254:	d1 05       	cpc	r29, r1
 256:	64 f3       	brlt	.-40     	; 0x230 <main+0x20>
		gpioSetPinMode(PD, pin, MODE_OUTPUT, HIGH);
	}

    while (1) 
    {
		for(int pin = 0; pin < pins; pin++){		 
 258:	0f 5f       	subi	r16, 0xFF	; 255
 25a:	1f 4f       	sbci	r17, 0xFF	; 255
 25c:	08 30       	cpi	r16, 0x08	; 8
 25e:	11 05       	cpc	r17, r1
 260:	b4 f3       	brlt	.-20     	; 0x24e <main+0x3e>
 262:	e3 cf       	rjmp	.-58     	; 0x22a <main+0x1a>

00000264 <_exit>:
 264:	f8 94       	cli

00000266 <__stop_program>:
 266:	ff cf       	rjmp	.-2      	; 0x266 <__stop_program>
