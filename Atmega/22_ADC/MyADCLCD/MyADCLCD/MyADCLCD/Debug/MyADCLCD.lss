
MyADCLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 000000a0  00000000  00000000  00000674  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000008ef  00000000  00000000  00000714  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000369  00000000  00000000  00001003  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000004dd  00000000  00000000  0000136c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000100  00000000  00000000  0000184c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000024d  00000000  00000000  0000194c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000220  00000000  00000000  00001b99  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000070  00000000  00000000  00001db9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	8c d0       	rcall	.+280    	; 0x14c <main>
  34:	db c2       	rjmp	.+1462   	; 0x5ec <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <ADC_Init>:
﻿#include "adc.h"
//----------------------------------------
void ADC_Init(void)
{
	ADCSRA |= (1<<ADEN) // Разрешение использования АЦП
  38:	86 b1       	in	r24, 0x06	; 6
  3a:	87 68       	ori	r24, 0x87	; 135
  3c:	86 b9       	out	0x06, r24	; 6
	|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);//Делитель 128 = 64 кГц
	ADMUX |= (1<<REFS1)|(1<<REFS0); //Внутренний Источник ОН 2,56в, вход ADC0
  3e:	87 b1       	in	r24, 0x07	; 7
  40:	80 6c       	ori	r24, 0xC0	; 192
  42:	87 b9       	out	0x07, r24	; 7
  44:	08 95       	ret

00000046 <ADC_convert>:
}
//----------------------------------------
unsigned int ADC_convert (void)
{
	ADCSRA |= (1<<ADSC); //Начинаем преобразование
  46:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & (1<<ADSC))); //проверим закончилось ли аналого-цифровое преобразование
  48:	36 99       	sbic	0x06, 6	; 6
  4a:	fe cf       	rjmp	.-4      	; 0x48 <ADC_convert+0x2>
	return (unsigned int) ADC;
  4c:	84 b1       	in	r24, 0x04	; 4
  4e:	95 b1       	in	r25, 0x05	; 5
  50:	08 95       	ret

00000052 <sendhalfbyte>:
  52:	93 9a       	sbi	0x12, 3	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  54:	95 e8       	ldi	r25, 0x85	; 133
  56:	9a 95       	dec	r25
  58:	f1 f7       	brne	.-4      	; 0x56 <sendhalfbyte+0x4>
  5a:	00 00       	nop
  5c:	92 b3       	in	r25, 0x12	; 18
  5e:	9f 70       	andi	r25, 0x0F	; 15
  60:	92 bb       	out	0x12, r25	; 18
  62:	92 b3       	in	r25, 0x12	; 18
  64:	82 95       	swap	r24
  66:	80 7f       	andi	r24, 0xF0	; 240
  68:	89 2b       	or	r24, r25
  6a:	82 bb       	out	0x12, r24	; 18
  6c:	93 98       	cbi	0x12, 3	; 18
  6e:	85 e8       	ldi	r24, 0x85	; 133
  70:	8a 95       	dec	r24
  72:	f1 f7       	brne	.-4      	; 0x70 <sendhalfbyte+0x1e>
  74:	00 00       	nop
  76:	08 95       	ret

00000078 <sendbyte>:
  78:	cf 93       	push	r28
  7a:	c8 2f       	mov	r28, r24
  7c:	61 11       	cpse	r22, r1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <sendbyte+0xc>
  80:	92 98       	cbi	0x12, 2	; 18
  82:	01 c0       	rjmp	.+2      	; 0x86 <sendbyte+0xe>
  84:	92 9a       	sbi	0x12, 2	; 18
  86:	8c 2f       	mov	r24, r28
  88:	82 95       	swap	r24
  8a:	8f 70       	andi	r24, 0x0F	; 15
  8c:	e2 df       	rcall	.-60     	; 0x52 <sendhalfbyte>
  8e:	8c 2f       	mov	r24, r28
  90:	e0 df       	rcall	.-64     	; 0x52 <sendhalfbyte>
  92:	cf 91       	pop	r28
  94:	08 95       	ret

00000096 <sendcharlcd>:
  96:	61 e0       	ldi	r22, 0x01	; 1
  98:	ef df       	rcall	.-34     	; 0x78 <sendbyte>
  9a:	08 95       	ret

0000009c <setpos>:
  9c:	90 e4       	ldi	r25, 0x40	; 64
  9e:	69 9f       	mul	r22, r25
  a0:	80 0d       	add	r24, r0
  a2:	11 24       	eor	r1, r1
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	80 68       	ori	r24, 0x80	; 128
  a8:	e7 df       	rcall	.-50     	; 0x78 <sendbyte>
  aa:	08 95       	ret

000000ac <LCD_ini>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	8f e2       	ldi	r24, 0x2F	; 47
  ae:	95 e7       	ldi	r25, 0x75	; 117
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <LCD_ini+0x4>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <LCD_ini+0xa>
  b6:	00 00       	nop
  b8:	83 e0       	ldi	r24, 0x03	; 3
  ba:	cb df       	rcall	.-106    	; 0x52 <sendhalfbyte>
  bc:	8f e3       	ldi	r24, 0x3F	; 63
  be:	9f e1       	ldi	r25, 0x1F	; 31
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <LCD_ini+0x14>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <LCD_ini+0x1a>
  c6:	00 00       	nop
  c8:	83 e0       	ldi	r24, 0x03	; 3
  ca:	c3 df       	rcall	.-122    	; 0x52 <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  cc:	87 ec       	ldi	r24, 0xC7	; 199
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_ini+0x24>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_ini+0x2a>
  d6:	00 00       	nop
  d8:	83 e0       	ldi	r24, 0x03	; 3
  da:	bb df       	rcall	.-138    	; 0x52 <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  dc:	8f ec       	ldi	r24, 0xCF	; 207
  de:	97 e0       	ldi	r25, 0x07	; 7
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <LCD_ini+0x34>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <LCD_ini+0x3a>
  e6:	00 00       	nop
  e8:	82 e0       	ldi	r24, 0x02	; 2
  ea:	b3 df       	rcall	.-154    	; 0x52 <sendhalfbyte>
  ec:	8f ec       	ldi	r24, 0xCF	; 207
  ee:	97 e0       	ldi	r25, 0x07	; 7
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_ini+0x44>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_ini+0x4a>
  f6:	00 00       	nop
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	88 e2       	ldi	r24, 0x28	; 40
  fc:	bd df       	rcall	.-134    	; 0x78 <sendbyte>
  fe:	8f ec       	ldi	r24, 0xCF	; 207
 100:	97 e0       	ldi	r25, 0x07	; 7
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_ini+0x56>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_ini+0x5c>
 108:	00 00       	nop
 10a:	60 e0       	ldi	r22, 0x00	; 0
 10c:	8c e0       	ldi	r24, 0x0C	; 12
 10e:	b4 df       	rcall	.-152    	; 0x78 <sendbyte>
 110:	8f ec       	ldi	r24, 0xCF	; 207
 112:	97 e0       	ldi	r25, 0x07	; 7
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <LCD_ini+0x68>
 118:	00 c0       	rjmp	.+0      	; 0x11a <LCD_ini+0x6e>
 11a:	00 00       	nop
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	86 e0       	ldi	r24, 0x06	; 6
 120:	ab df       	rcall	.-170    	; 0x78 <sendbyte>
 122:	8f ec       	ldi	r24, 0xCF	; 207
 124:	97 e0       	ldi	r25, 0x07	; 7
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <LCD_ini+0x7a>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <LCD_ini+0x80>
 12c:	00 00       	nop
 12e:	08 95       	ret

00000130 <clearlcd>:
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	a1 df       	rcall	.-190    	; 0x78 <sendbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 136:	87 eb       	ldi	r24, 0xB7	; 183
 138:	9b e0       	ldi	r25, 0x0B	; 11
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <clearlcd+0xa>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <clearlcd+0x10>
 140:	00 00       	nop
 142:	08 95       	ret

00000144 <port_ini>:
 144:	12 ba       	out	0x12, r1	; 18
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	81 bb       	out	0x11, r24	; 17
 14a:	08 95       	ret

0000014c <main>:
 14c:	fb df       	rcall	.-10     	; 0x144 <port_ini>
 14e:	ae df       	rcall	.-164    	; 0xac <LCD_ini>
 150:	73 df       	rcall	.-282    	; 0x38 <ADC_Init>
 152:	ee df       	rcall	.-36     	; 0x130 <clearlcd>
 154:	c8 ee       	ldi	r28, 0xE8	; 232
 156:	d3 e0       	ldi	r29, 0x03	; 3
 158:	04 e6       	ldi	r16, 0x64	; 100
 15a:	1d ec       	ldi	r17, 0xCD	; 205
 15c:	74 df       	rcall	.-280    	; 0x46 <ADC_convert>
 15e:	7c 01       	movw	r14, r24
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	9a df       	rcall	.-204    	; 0x9c <setpos>
 168:	97 01       	movw	r18, r14
 16a:	36 95       	lsr	r19
 16c:	27 95       	ror	r18
 16e:	36 95       	lsr	r19
 170:	27 95       	ror	r18
 172:	36 95       	lsr	r19
 174:	27 95       	ror	r18
 176:	a5 ec       	ldi	r26, 0xC5	; 197
 178:	b0 e2       	ldi	r27, 0x20	; 32
 17a:	2c d2       	rcall	.+1112   	; 0x5d4 <__umulhisi3>
 17c:	6c 01       	movw	r12, r24
 17e:	d6 94       	lsr	r13
 180:	c7 94       	ror	r12
 182:	d6 94       	lsr	r13
 184:	c7 94       	ror	r12
 186:	d6 94       	lsr	r13
 188:	c7 94       	ror	r12
 18a:	d6 94       	lsr	r13
 18c:	c7 94       	ror	r12
 18e:	80 e3       	ldi	r24, 0x30	; 48
 190:	8c 0d       	add	r24, r12
 192:	81 df       	rcall	.-254    	; 0x96 <sendcharlcd>
 194:	cc 9e       	mul	r12, r28
 196:	c0 01       	movw	r24, r0
 198:	cd 9e       	mul	r12, r29
 19a:	90 0d       	add	r25, r0
 19c:	dc 9e       	mul	r13, r28
 19e:	90 0d       	add	r25, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	97 01       	movw	r18, r14
 1a4:	28 1b       	sub	r18, r24
 1a6:	39 0b       	sbc	r19, r25
 1a8:	36 95       	lsr	r19
 1aa:	27 95       	ror	r18
 1ac:	36 95       	lsr	r19
 1ae:	27 95       	ror	r18
 1b0:	ab e7       	ldi	r26, 0x7B	; 123
 1b2:	b4 e1       	ldi	r27, 0x14	; 20
 1b4:	0f d2       	rcall	.+1054   	; 0x5d4 <__umulhisi3>
 1b6:	96 95       	lsr	r25
 1b8:	87 95       	ror	r24
 1ba:	80 5d       	subi	r24, 0xD0	; 208
 1bc:	6c df       	rcall	.-296    	; 0x96 <sendcharlcd>
 1be:	97 01       	movw	r18, r14
 1c0:	36 95       	lsr	r19
 1c2:	27 95       	ror	r18
 1c4:	36 95       	lsr	r19
 1c6:	27 95       	ror	r18
 1c8:	ab e7       	ldi	r26, 0x7B	; 123
 1ca:	b4 e1       	ldi	r27, 0x14	; 20
 1cc:	03 d2       	rcall	.+1030   	; 0x5d4 <__umulhisi3>
 1ce:	96 95       	lsr	r25
 1d0:	87 95       	ror	r24
 1d2:	08 9f       	mul	r16, r24
 1d4:	90 01       	movw	r18, r0
 1d6:	09 9f       	mul	r16, r25
 1d8:	30 0d       	add	r19, r0
 1da:	11 24       	eor	r1, r1
 1dc:	c7 01       	movw	r24, r14
 1de:	82 1b       	sub	r24, r18
 1e0:	93 0b       	sbc	r25, r19
 1e2:	9c 01       	movw	r18, r24
 1e4:	ad ec       	ldi	r26, 0xCD	; 205
 1e6:	bc ec       	ldi	r27, 0xCC	; 204
 1e8:	f5 d1       	rcall	.+1002   	; 0x5d4 <__umulhisi3>
 1ea:	96 95       	lsr	r25
 1ec:	87 95       	ror	r24
 1ee:	96 95       	lsr	r25
 1f0:	87 95       	ror	r24
 1f2:	96 95       	lsr	r25
 1f4:	87 95       	ror	r24
 1f6:	80 5d       	subi	r24, 0xD0	; 208
 1f8:	4e df       	rcall	.-356    	; 0x96 <sendcharlcd>
 1fa:	97 01       	movw	r18, r14
 1fc:	ad ec       	ldi	r26, 0xCD	; 205
 1fe:	bc ec       	ldi	r27, 0xCC	; 204
 200:	e9 d1       	rcall	.+978    	; 0x5d4 <__umulhisi3>
 202:	96 95       	lsr	r25
 204:	87 95       	ror	r24
 206:	96 95       	lsr	r25
 208:	87 95       	ror	r24
 20a:	96 95       	lsr	r25
 20c:	87 95       	ror	r24
 20e:	9c 01       	movw	r18, r24
 210:	22 0f       	add	r18, r18
 212:	33 1f       	adc	r19, r19
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	82 0f       	add	r24, r18
 222:	93 1f       	adc	r25, r19
 224:	97 01       	movw	r18, r14
 226:	28 1b       	sub	r18, r24
 228:	39 0b       	sbc	r19, r25
 22a:	c9 01       	movw	r24, r18
 22c:	80 5d       	subi	r24, 0xD0	; 208
 22e:	33 df       	rcall	.-410    	; 0x96 <sendcharlcd>
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	88 e0       	ldi	r24, 0x08	; 8
 236:	32 df       	rcall	.-412    	; 0x9c <setpos>
 238:	b7 01       	movw	r22, r14
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	d9 d0       	rcall	.+434    	; 0x3f2 <__floatunsisf>
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	48 ec       	ldi	r20, 0xC8	; 200
 246:	53 e4       	ldi	r21, 0x43	; 67
 248:	40 d0       	rcall	.+128    	; 0x2ca <__divsf3>
 24a:	6b 01       	movw	r12, r22
 24c:	7c 01       	movw	r14, r24
 24e:	a5 d0       	rcall	.+330    	; 0x39a <__fixunssfsi>
 250:	80 e3       	ldi	r24, 0x30	; 48
 252:	86 0f       	add	r24, r22
 254:	20 df       	rcall	.-448    	; 0x96 <sendcharlcd>
 256:	8e e2       	ldi	r24, 0x2E	; 46
 258:	1e df       	rcall	.-452    	; 0x96 <sendcharlcd>
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	40 e2       	ldi	r20, 0x20	; 32
 260:	51 e4       	ldi	r21, 0x41	; 65
 262:	c7 01       	movw	r24, r14
 264:	b6 01       	movw	r22, r12
 266:	53 d1       	rcall	.+678    	; 0x50e <__mulsf3>
 268:	98 d0       	rcall	.+304    	; 0x39a <__fixunssfsi>
 26a:	61 9f       	mul	r22, r17
 26c:	81 2d       	mov	r24, r1
 26e:	11 24       	eor	r1, r1
 270:	86 95       	lsr	r24
 272:	86 95       	lsr	r24
 274:	86 95       	lsr	r24
 276:	88 0f       	add	r24, r24
 278:	98 2f       	mov	r25, r24
 27a:	99 0f       	add	r25, r25
 27c:	99 0f       	add	r25, r25
 27e:	89 0f       	add	r24, r25
 280:	68 1b       	sub	r22, r24
 282:	86 2f       	mov	r24, r22
 284:	80 5d       	subi	r24, 0xD0	; 208
 286:	07 df       	rcall	.-498    	; 0x96 <sendcharlcd>
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	48 ec       	ldi	r20, 0xC8	; 200
 28e:	52 e4       	ldi	r21, 0x42	; 66
 290:	c7 01       	movw	r24, r14
 292:	b6 01       	movw	r22, r12
 294:	3c d1       	rcall	.+632    	; 0x50e <__mulsf3>
 296:	81 d0       	rcall	.+258    	; 0x39a <__fixunssfsi>
 298:	61 9f       	mul	r22, r17
 29a:	81 2d       	mov	r24, r1
 29c:	11 24       	eor	r1, r1
 29e:	86 95       	lsr	r24
 2a0:	86 95       	lsr	r24
 2a2:	86 95       	lsr	r24
 2a4:	88 0f       	add	r24, r24
 2a6:	98 2f       	mov	r25, r24
 2a8:	99 0f       	add	r25, r25
 2aa:	99 0f       	add	r25, r25
 2ac:	89 0f       	add	r24, r25
 2ae:	68 1b       	sub	r22, r24
 2b0:	86 2f       	mov	r24, r22
 2b2:	80 5d       	subi	r24, 0xD0	; 208
 2b4:	f0 de       	rcall	.-544    	; 0x96 <sendcharlcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b6:	3f ef       	ldi	r19, 0xFF	; 255
 2b8:	84 e3       	ldi	r24, 0x34	; 52
 2ba:	9c e0       	ldi	r25, 0x0C	; 12
 2bc:	31 50       	subi	r19, 0x01	; 1
 2be:	80 40       	sbci	r24, 0x00	; 0
 2c0:	90 40       	sbci	r25, 0x00	; 0
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <main+0x170>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x17a>
 2c6:	00 00       	nop
 2c8:	49 cf       	rjmp	.-366    	; 0x15c <main+0x10>

000002ca <__divsf3>:
 2ca:	0c d0       	rcall	.+24     	; 0x2e4 <__divsf3x>
 2cc:	e6 c0       	rjmp	.+460    	; 0x49a <__fp_round>
 2ce:	de d0       	rcall	.+444    	; 0x48c <__fp_pscB>
 2d0:	40 f0       	brcs	.+16     	; 0x2e2 <__divsf3+0x18>
 2d2:	d5 d0       	rcall	.+426    	; 0x47e <__fp_pscA>
 2d4:	30 f0       	brcs	.+12     	; 0x2e2 <__divsf3+0x18>
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <__divsf3+0x16>
 2d8:	5f 3f       	cpi	r21, 0xFF	; 255
 2da:	19 f0       	breq	.+6      	; 0x2e2 <__divsf3+0x18>
 2dc:	c7 c0       	rjmp	.+398    	; 0x46c <__fp_inf>
 2de:	51 11       	cpse	r21, r1
 2e0:	10 c1       	rjmp	.+544    	; 0x502 <__fp_szero>
 2e2:	ca c0       	rjmp	.+404    	; 0x478 <__fp_nan>

000002e4 <__divsf3x>:
 2e4:	eb d0       	rcall	.+470    	; 0x4bc <__fp_split3>
 2e6:	98 f3       	brcs	.-26     	; 0x2ce <__divsf3+0x4>

000002e8 <__divsf3_pse>:
 2e8:	99 23       	and	r25, r25
 2ea:	c9 f3       	breq	.-14     	; 0x2de <__divsf3+0x14>
 2ec:	55 23       	and	r21, r21
 2ee:	b1 f3       	breq	.-20     	; 0x2dc <__divsf3+0x12>
 2f0:	95 1b       	sub	r25, r21
 2f2:	55 0b       	sbc	r21, r21
 2f4:	bb 27       	eor	r27, r27
 2f6:	aa 27       	eor	r26, r26
 2f8:	62 17       	cp	r22, r18
 2fa:	73 07       	cpc	r23, r19
 2fc:	84 07       	cpc	r24, r20
 2fe:	38 f0       	brcs	.+14     	; 0x30e <__divsf3_pse+0x26>
 300:	9f 5f       	subi	r25, 0xFF	; 255
 302:	5f 4f       	sbci	r21, 0xFF	; 255
 304:	22 0f       	add	r18, r18
 306:	33 1f       	adc	r19, r19
 308:	44 1f       	adc	r20, r20
 30a:	aa 1f       	adc	r26, r26
 30c:	a9 f3       	breq	.-22     	; 0x2f8 <__divsf3_pse+0x10>
 30e:	33 d0       	rcall	.+102    	; 0x376 <__divsf3_pse+0x8e>
 310:	0e 2e       	mov	r0, r30
 312:	3a f0       	brmi	.+14     	; 0x322 <__divsf3_pse+0x3a>
 314:	e0 e8       	ldi	r30, 0x80	; 128
 316:	30 d0       	rcall	.+96     	; 0x378 <__divsf3_pse+0x90>
 318:	91 50       	subi	r25, 0x01	; 1
 31a:	50 40       	sbci	r21, 0x00	; 0
 31c:	e6 95       	lsr	r30
 31e:	00 1c       	adc	r0, r0
 320:	ca f7       	brpl	.-14     	; 0x314 <__divsf3_pse+0x2c>
 322:	29 d0       	rcall	.+82     	; 0x376 <__divsf3_pse+0x8e>
 324:	fe 2f       	mov	r31, r30
 326:	27 d0       	rcall	.+78     	; 0x376 <__divsf3_pse+0x8e>
 328:	66 0f       	add	r22, r22
 32a:	77 1f       	adc	r23, r23
 32c:	88 1f       	adc	r24, r24
 32e:	bb 1f       	adc	r27, r27
 330:	26 17       	cp	r18, r22
 332:	37 07       	cpc	r19, r23
 334:	48 07       	cpc	r20, r24
 336:	ab 07       	cpc	r26, r27
 338:	b0 e8       	ldi	r27, 0x80	; 128
 33a:	09 f0       	breq	.+2      	; 0x33e <__divsf3_pse+0x56>
 33c:	bb 0b       	sbc	r27, r27
 33e:	80 2d       	mov	r24, r0
 340:	bf 01       	movw	r22, r30
 342:	ff 27       	eor	r31, r31
 344:	93 58       	subi	r25, 0x83	; 131
 346:	5f 4f       	sbci	r21, 0xFF	; 255
 348:	2a f0       	brmi	.+10     	; 0x354 <__divsf3_pse+0x6c>
 34a:	9e 3f       	cpi	r25, 0xFE	; 254
 34c:	51 05       	cpc	r21, r1
 34e:	68 f0       	brcs	.+26     	; 0x36a <__divsf3_pse+0x82>
 350:	8d c0       	rjmp	.+282    	; 0x46c <__fp_inf>
 352:	d7 c0       	rjmp	.+430    	; 0x502 <__fp_szero>
 354:	5f 3f       	cpi	r21, 0xFF	; 255
 356:	ec f3       	brlt	.-6      	; 0x352 <__divsf3_pse+0x6a>
 358:	98 3e       	cpi	r25, 0xE8	; 232
 35a:	dc f3       	brlt	.-10     	; 0x352 <__divsf3_pse+0x6a>
 35c:	86 95       	lsr	r24
 35e:	77 95       	ror	r23
 360:	67 95       	ror	r22
 362:	b7 95       	ror	r27
 364:	f7 95       	ror	r31
 366:	9f 5f       	subi	r25, 0xFF	; 255
 368:	c9 f7       	brne	.-14     	; 0x35c <__divsf3_pse+0x74>
 36a:	88 0f       	add	r24, r24
 36c:	91 1d       	adc	r25, r1
 36e:	96 95       	lsr	r25
 370:	87 95       	ror	r24
 372:	97 f9       	bld	r25, 7
 374:	08 95       	ret
 376:	e1 e0       	ldi	r30, 0x01	; 1
 378:	66 0f       	add	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	bb 1f       	adc	r27, r27
 380:	62 17       	cp	r22, r18
 382:	73 07       	cpc	r23, r19
 384:	84 07       	cpc	r24, r20
 386:	ba 07       	cpc	r27, r26
 388:	20 f0       	brcs	.+8      	; 0x392 <__divsf3_pse+0xaa>
 38a:	62 1b       	sub	r22, r18
 38c:	73 0b       	sbc	r23, r19
 38e:	84 0b       	sbc	r24, r20
 390:	ba 0b       	sbc	r27, r26
 392:	ee 1f       	adc	r30, r30
 394:	88 f7       	brcc	.-30     	; 0x378 <__divsf3_pse+0x90>
 396:	e0 95       	com	r30
 398:	08 95       	ret

0000039a <__fixunssfsi>:
 39a:	98 d0       	rcall	.+304    	; 0x4cc <__fp_splitA>
 39c:	88 f0       	brcs	.+34     	; 0x3c0 <__fixunssfsi+0x26>
 39e:	9f 57       	subi	r25, 0x7F	; 127
 3a0:	90 f0       	brcs	.+36     	; 0x3c6 <__fixunssfsi+0x2c>
 3a2:	b9 2f       	mov	r27, r25
 3a4:	99 27       	eor	r25, r25
 3a6:	b7 51       	subi	r27, 0x17	; 23
 3a8:	a0 f0       	brcs	.+40     	; 0x3d2 <__fixunssfsi+0x38>
 3aa:	d1 f0       	breq	.+52     	; 0x3e0 <__fixunssfsi+0x46>
 3ac:	66 0f       	add	r22, r22
 3ae:	77 1f       	adc	r23, r23
 3b0:	88 1f       	adc	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	1a f0       	brmi	.+6      	; 0x3bc <__fixunssfsi+0x22>
 3b6:	ba 95       	dec	r27
 3b8:	c9 f7       	brne	.-14     	; 0x3ac <__fixunssfsi+0x12>
 3ba:	12 c0       	rjmp	.+36     	; 0x3e0 <__fixunssfsi+0x46>
 3bc:	b1 30       	cpi	r27, 0x01	; 1
 3be:	81 f0       	breq	.+32     	; 0x3e0 <__fixunssfsi+0x46>
 3c0:	9f d0       	rcall	.+318    	; 0x500 <__fp_zero>
 3c2:	b1 e0       	ldi	r27, 0x01	; 1
 3c4:	08 95       	ret
 3c6:	9c c0       	rjmp	.+312    	; 0x500 <__fp_zero>
 3c8:	67 2f       	mov	r22, r23
 3ca:	78 2f       	mov	r23, r24
 3cc:	88 27       	eor	r24, r24
 3ce:	b8 5f       	subi	r27, 0xF8	; 248
 3d0:	39 f0       	breq	.+14     	; 0x3e0 <__fixunssfsi+0x46>
 3d2:	b9 3f       	cpi	r27, 0xF9	; 249
 3d4:	cc f3       	brlt	.-14     	; 0x3c8 <__fixunssfsi+0x2e>
 3d6:	86 95       	lsr	r24
 3d8:	77 95       	ror	r23
 3da:	67 95       	ror	r22
 3dc:	b3 95       	inc	r27
 3de:	d9 f7       	brne	.-10     	; 0x3d6 <__fixunssfsi+0x3c>
 3e0:	3e f4       	brtc	.+14     	; 0x3f0 <__fixunssfsi+0x56>
 3e2:	90 95       	com	r25
 3e4:	80 95       	com	r24
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	08 95       	ret

000003f2 <__floatunsisf>:
 3f2:	e8 94       	clt
 3f4:	09 c0       	rjmp	.+18     	; 0x408 <__floatsisf+0x12>

000003f6 <__floatsisf>:
 3f6:	97 fb       	bst	r25, 7
 3f8:	3e f4       	brtc	.+14     	; 0x408 <__floatsisf+0x12>
 3fa:	90 95       	com	r25
 3fc:	80 95       	com	r24
 3fe:	70 95       	com	r23
 400:	61 95       	neg	r22
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	99 23       	and	r25, r25
 40a:	a9 f0       	breq	.+42     	; 0x436 <__floatsisf+0x40>
 40c:	f9 2f       	mov	r31, r25
 40e:	96 e9       	ldi	r25, 0x96	; 150
 410:	bb 27       	eor	r27, r27
 412:	93 95       	inc	r25
 414:	f6 95       	lsr	r31
 416:	87 95       	ror	r24
 418:	77 95       	ror	r23
 41a:	67 95       	ror	r22
 41c:	b7 95       	ror	r27
 41e:	f1 11       	cpse	r31, r1
 420:	f8 cf       	rjmp	.-16     	; 0x412 <__floatsisf+0x1c>
 422:	fa f4       	brpl	.+62     	; 0x462 <__stack+0x3>
 424:	bb 0f       	add	r27, r27
 426:	11 f4       	brne	.+4      	; 0x42c <__floatsisf+0x36>
 428:	60 ff       	sbrs	r22, 0
 42a:	1b c0       	rjmp	.+54     	; 0x462 <__stack+0x3>
 42c:	6f 5f       	subi	r22, 0xFF	; 255
 42e:	7f 4f       	sbci	r23, 0xFF	; 255
 430:	8f 4f       	sbci	r24, 0xFF	; 255
 432:	9f 4f       	sbci	r25, 0xFF	; 255
 434:	16 c0       	rjmp	.+44     	; 0x462 <__stack+0x3>
 436:	88 23       	and	r24, r24
 438:	11 f0       	breq	.+4      	; 0x43e <__floatsisf+0x48>
 43a:	96 e9       	ldi	r25, 0x96	; 150
 43c:	11 c0       	rjmp	.+34     	; 0x460 <__stack+0x1>
 43e:	77 23       	and	r23, r23
 440:	21 f0       	breq	.+8      	; 0x44a <__floatsisf+0x54>
 442:	9e e8       	ldi	r25, 0x8E	; 142
 444:	87 2f       	mov	r24, r23
 446:	76 2f       	mov	r23, r22
 448:	05 c0       	rjmp	.+10     	; 0x454 <__floatsisf+0x5e>
 44a:	66 23       	and	r22, r22
 44c:	71 f0       	breq	.+28     	; 0x46a <__stack+0xb>
 44e:	96 e8       	ldi	r25, 0x86	; 134
 450:	86 2f       	mov	r24, r22
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	2a f0       	brmi	.+10     	; 0x462 <__stack+0x3>
 458:	9a 95       	dec	r25
 45a:	66 0f       	add	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	da f7       	brpl	.-10     	; 0x458 <__floatsisf+0x62>
 462:	88 0f       	add	r24, r24
 464:	96 95       	lsr	r25
 466:	87 95       	ror	r24
 468:	97 f9       	bld	r25, 7
 46a:	08 95       	ret

0000046c <__fp_inf>:
 46c:	97 f9       	bld	r25, 7
 46e:	9f 67       	ori	r25, 0x7F	; 127
 470:	80 e8       	ldi	r24, 0x80	; 128
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	60 e0       	ldi	r22, 0x00	; 0
 476:	08 95       	ret

00000478 <__fp_nan>:
 478:	9f ef       	ldi	r25, 0xFF	; 255
 47a:	80 ec       	ldi	r24, 0xC0	; 192
 47c:	08 95       	ret

0000047e <__fp_pscA>:
 47e:	00 24       	eor	r0, r0
 480:	0a 94       	dec	r0
 482:	16 16       	cp	r1, r22
 484:	17 06       	cpc	r1, r23
 486:	18 06       	cpc	r1, r24
 488:	09 06       	cpc	r0, r25
 48a:	08 95       	ret

0000048c <__fp_pscB>:
 48c:	00 24       	eor	r0, r0
 48e:	0a 94       	dec	r0
 490:	12 16       	cp	r1, r18
 492:	13 06       	cpc	r1, r19
 494:	14 06       	cpc	r1, r20
 496:	05 06       	cpc	r0, r21
 498:	08 95       	ret

0000049a <__fp_round>:
 49a:	09 2e       	mov	r0, r25
 49c:	03 94       	inc	r0
 49e:	00 0c       	add	r0, r0
 4a0:	11 f4       	brne	.+4      	; 0x4a6 <__fp_round+0xc>
 4a2:	88 23       	and	r24, r24
 4a4:	52 f0       	brmi	.+20     	; 0x4ba <__fp_round+0x20>
 4a6:	bb 0f       	add	r27, r27
 4a8:	40 f4       	brcc	.+16     	; 0x4ba <__fp_round+0x20>
 4aa:	bf 2b       	or	r27, r31
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <__fp_round+0x18>
 4ae:	60 ff       	sbrs	r22, 0
 4b0:	04 c0       	rjmp	.+8      	; 0x4ba <__fp_round+0x20>
 4b2:	6f 5f       	subi	r22, 0xFF	; 255
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	8f 4f       	sbci	r24, 0xFF	; 255
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	08 95       	ret

000004bc <__fp_split3>:
 4bc:	57 fd       	sbrc	r21, 7
 4be:	90 58       	subi	r25, 0x80	; 128
 4c0:	44 0f       	add	r20, r20
 4c2:	55 1f       	adc	r21, r21
 4c4:	59 f0       	breq	.+22     	; 0x4dc <__fp_splitA+0x10>
 4c6:	5f 3f       	cpi	r21, 0xFF	; 255
 4c8:	71 f0       	breq	.+28     	; 0x4e6 <__fp_splitA+0x1a>
 4ca:	47 95       	ror	r20

000004cc <__fp_splitA>:
 4cc:	88 0f       	add	r24, r24
 4ce:	97 fb       	bst	r25, 7
 4d0:	99 1f       	adc	r25, r25
 4d2:	61 f0       	breq	.+24     	; 0x4ec <__fp_splitA+0x20>
 4d4:	9f 3f       	cpi	r25, 0xFF	; 255
 4d6:	79 f0       	breq	.+30     	; 0x4f6 <__fp_splitA+0x2a>
 4d8:	87 95       	ror	r24
 4da:	08 95       	ret
 4dc:	12 16       	cp	r1, r18
 4de:	13 06       	cpc	r1, r19
 4e0:	14 06       	cpc	r1, r20
 4e2:	55 1f       	adc	r21, r21
 4e4:	f2 cf       	rjmp	.-28     	; 0x4ca <__fp_split3+0xe>
 4e6:	46 95       	lsr	r20
 4e8:	f1 df       	rcall	.-30     	; 0x4cc <__fp_splitA>
 4ea:	08 c0       	rjmp	.+16     	; 0x4fc <__fp_splitA+0x30>
 4ec:	16 16       	cp	r1, r22
 4ee:	17 06       	cpc	r1, r23
 4f0:	18 06       	cpc	r1, r24
 4f2:	99 1f       	adc	r25, r25
 4f4:	f1 cf       	rjmp	.-30     	; 0x4d8 <__fp_splitA+0xc>
 4f6:	86 95       	lsr	r24
 4f8:	71 05       	cpc	r23, r1
 4fa:	61 05       	cpc	r22, r1
 4fc:	08 94       	sec
 4fe:	08 95       	ret

00000500 <__fp_zero>:
 500:	e8 94       	clt

00000502 <__fp_szero>:
 502:	bb 27       	eor	r27, r27
 504:	66 27       	eor	r22, r22
 506:	77 27       	eor	r23, r23
 508:	cb 01       	movw	r24, r22
 50a:	97 f9       	bld	r25, 7
 50c:	08 95       	ret

0000050e <__mulsf3>:
 50e:	0b d0       	rcall	.+22     	; 0x526 <__mulsf3x>
 510:	c4 cf       	rjmp	.-120    	; 0x49a <__fp_round>
 512:	b5 df       	rcall	.-150    	; 0x47e <__fp_pscA>
 514:	28 f0       	brcs	.+10     	; 0x520 <__mulsf3+0x12>
 516:	ba df       	rcall	.-140    	; 0x48c <__fp_pscB>
 518:	18 f0       	brcs	.+6      	; 0x520 <__mulsf3+0x12>
 51a:	95 23       	and	r25, r21
 51c:	09 f0       	breq	.+2      	; 0x520 <__mulsf3+0x12>
 51e:	a6 cf       	rjmp	.-180    	; 0x46c <__fp_inf>
 520:	ab cf       	rjmp	.-170    	; 0x478 <__fp_nan>
 522:	11 24       	eor	r1, r1
 524:	ee cf       	rjmp	.-36     	; 0x502 <__fp_szero>

00000526 <__mulsf3x>:
 526:	ca df       	rcall	.-108    	; 0x4bc <__fp_split3>
 528:	a0 f3       	brcs	.-24     	; 0x512 <__mulsf3+0x4>

0000052a <__mulsf3_pse>:
 52a:	95 9f       	mul	r25, r21
 52c:	d1 f3       	breq	.-12     	; 0x522 <__mulsf3+0x14>
 52e:	95 0f       	add	r25, r21
 530:	50 e0       	ldi	r21, 0x00	; 0
 532:	55 1f       	adc	r21, r21
 534:	62 9f       	mul	r22, r18
 536:	f0 01       	movw	r30, r0
 538:	72 9f       	mul	r23, r18
 53a:	bb 27       	eor	r27, r27
 53c:	f0 0d       	add	r31, r0
 53e:	b1 1d       	adc	r27, r1
 540:	63 9f       	mul	r22, r19
 542:	aa 27       	eor	r26, r26
 544:	f0 0d       	add	r31, r0
 546:	b1 1d       	adc	r27, r1
 548:	aa 1f       	adc	r26, r26
 54a:	64 9f       	mul	r22, r20
 54c:	66 27       	eor	r22, r22
 54e:	b0 0d       	add	r27, r0
 550:	a1 1d       	adc	r26, r1
 552:	66 1f       	adc	r22, r22
 554:	82 9f       	mul	r24, r18
 556:	22 27       	eor	r18, r18
 558:	b0 0d       	add	r27, r0
 55a:	a1 1d       	adc	r26, r1
 55c:	62 1f       	adc	r22, r18
 55e:	73 9f       	mul	r23, r19
 560:	b0 0d       	add	r27, r0
 562:	a1 1d       	adc	r26, r1
 564:	62 1f       	adc	r22, r18
 566:	83 9f       	mul	r24, r19
 568:	a0 0d       	add	r26, r0
 56a:	61 1d       	adc	r22, r1
 56c:	22 1f       	adc	r18, r18
 56e:	74 9f       	mul	r23, r20
 570:	33 27       	eor	r19, r19
 572:	a0 0d       	add	r26, r0
 574:	61 1d       	adc	r22, r1
 576:	23 1f       	adc	r18, r19
 578:	84 9f       	mul	r24, r20
 57a:	60 0d       	add	r22, r0
 57c:	21 1d       	adc	r18, r1
 57e:	82 2f       	mov	r24, r18
 580:	76 2f       	mov	r23, r22
 582:	6a 2f       	mov	r22, r26
 584:	11 24       	eor	r1, r1
 586:	9f 57       	subi	r25, 0x7F	; 127
 588:	50 40       	sbci	r21, 0x00	; 0
 58a:	8a f0       	brmi	.+34     	; 0x5ae <__mulsf3_pse+0x84>
 58c:	e1 f0       	breq	.+56     	; 0x5c6 <__mulsf3_pse+0x9c>
 58e:	88 23       	and	r24, r24
 590:	4a f0       	brmi	.+18     	; 0x5a4 <__mulsf3_pse+0x7a>
 592:	ee 0f       	add	r30, r30
 594:	ff 1f       	adc	r31, r31
 596:	bb 1f       	adc	r27, r27
 598:	66 1f       	adc	r22, r22
 59a:	77 1f       	adc	r23, r23
 59c:	88 1f       	adc	r24, r24
 59e:	91 50       	subi	r25, 0x01	; 1
 5a0:	50 40       	sbci	r21, 0x00	; 0
 5a2:	a9 f7       	brne	.-22     	; 0x58e <__mulsf3_pse+0x64>
 5a4:	9e 3f       	cpi	r25, 0xFE	; 254
 5a6:	51 05       	cpc	r21, r1
 5a8:	70 f0       	brcs	.+28     	; 0x5c6 <__mulsf3_pse+0x9c>
 5aa:	60 cf       	rjmp	.-320    	; 0x46c <__fp_inf>
 5ac:	aa cf       	rjmp	.-172    	; 0x502 <__fp_szero>
 5ae:	5f 3f       	cpi	r21, 0xFF	; 255
 5b0:	ec f3       	brlt	.-6      	; 0x5ac <__mulsf3_pse+0x82>
 5b2:	98 3e       	cpi	r25, 0xE8	; 232
 5b4:	dc f3       	brlt	.-10     	; 0x5ac <__mulsf3_pse+0x82>
 5b6:	86 95       	lsr	r24
 5b8:	77 95       	ror	r23
 5ba:	67 95       	ror	r22
 5bc:	b7 95       	ror	r27
 5be:	f7 95       	ror	r31
 5c0:	e7 95       	ror	r30
 5c2:	9f 5f       	subi	r25, 0xFF	; 255
 5c4:	c1 f7       	brne	.-16     	; 0x5b6 <__mulsf3_pse+0x8c>
 5c6:	fe 2b       	or	r31, r30
 5c8:	88 0f       	add	r24, r24
 5ca:	91 1d       	adc	r25, r1
 5cc:	96 95       	lsr	r25
 5ce:	87 95       	ror	r24
 5d0:	97 f9       	bld	r25, 7
 5d2:	08 95       	ret

000005d4 <__umulhisi3>:
 5d4:	a2 9f       	mul	r26, r18
 5d6:	b0 01       	movw	r22, r0
 5d8:	b3 9f       	mul	r27, r19
 5da:	c0 01       	movw	r24, r0
 5dc:	a3 9f       	mul	r26, r19
 5de:	01 d0       	rcall	.+2      	; 0x5e2 <__umulhisi3+0xe>
 5e0:	b2 9f       	mul	r27, r18
 5e2:	70 0d       	add	r23, r0
 5e4:	81 1d       	adc	r24, r1
 5e6:	11 24       	eor	r1, r1
 5e8:	91 1d       	adc	r25, r1
 5ea:	08 95       	ret

000005ec <_exit>:
 5ec:	f8 94       	cli

000005ee <__stop_program>:
 5ee:	ff cf       	rjmp	.-2      	; 0x5ee <__stop_program>
