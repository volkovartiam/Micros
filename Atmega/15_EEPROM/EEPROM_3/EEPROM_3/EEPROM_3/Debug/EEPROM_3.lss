
EEPROM_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000192  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000192  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000208  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000099c  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070c  00000000  00000000  00000c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000436  00000000  00000000  00001320  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001758  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c4  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000af  00000000  00000000  00001b60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001c0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5d 00 	call	0xba	; 0xba <main>
  78:	0c 94 9d 00 	jmp	0x13a	; 0x13a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <blink>:
#define F_CPU 16000000L		//proteus

#define led 5
void blink()
{
	PORTB |= (1 << led);
  80:	85 b1       	in	r24, 0x05	; 5
  82:	80 62       	ori	r24, 0x20	; 32
  84:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f e9       	ldi	r18, 0x9F	; 159
  88:	86 e8       	ldi	r24, 0x86	; 134
  8a:	91 e0       	ldi	r25, 0x01	; 1
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	80 40       	sbci	r24, 0x00	; 0
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <blink+0xc>
  94:	00 c0       	rjmp	.+0      	; 0x96 <blink+0x16>
  96:	00 00       	nop
	_delay_ms(500);
	PORTB &= (~(1 << led));
  98:	85 b1       	in	r24, 0x05	; 5
  9a:	8f 7d       	andi	r24, 0xDF	; 223
  9c:	85 b9       	out	0x05, r24	; 5
  9e:	2f e9       	ldi	r18, 0x9F	; 159
  a0:	86 e8       	ldi	r24, 0x86	; 134
  a2:	91 e0       	ldi	r25, 0x01	; 1
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <blink+0x24>
  ac:	00 c0       	rjmp	.+0      	; 0xae <blink+0x2e>
  ae:	00 00       	nop
  b0:	08 95       	ret

000000b2 <init_blink>:
	_delay_ms(500);
}

void init_blink()
{
	DDRB |= (1<<(led));
  b2:	84 b1       	in	r24, 0x04	; 4
  b4:	80 62       	ori	r24, 0x20	; 32
  b6:	84 b9       	out	0x04, r24	; 4
  b8:	08 95       	ret

000000ba <main>:
}

int main(void)
{
    
	eeprom_write_byte(0x0, 0x0);
  ba:	60 e0       	ldi	r22, 0x00	; 0
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	eeprom_write_byte(0x1, 0x1);
  c4:	61 e0       	ldi	r22, 0x01	; 1
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	eeprom_write_byte(0x2, 0x2);	
  ce:	62 e0       	ldi	r22, 0x02	; 2
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	eeprom_write_byte(0x3, 0x3);
  d8:	63 e0       	ldi	r22, 0x03	; 3
  da:	83 e0       	ldi	r24, 0x03	; 3
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	eeprom_write_byte(0x4, 0x4);
  e2:	64 e0       	ldi	r22, 0x04	; 4
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	eeprom_write_byte(0x5, 0x5);
  ec:	65 e0       	ldi	r22, 0x05	; 5
  ee:	85 e0       	ldi	r24, 0x05	; 5
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 8f 00 	call	0x11e	; 0x11e <eeprom_write_byte>
	
	
	init_blink();
  f6:	0e 94 59 00 	call	0xb2	; 0xb2 <init_blink>
	unsigned char x = 0;
	x = eeprom_read_byte(0x5);
  fa:	85 e0       	ldi	r24, 0x05	; 5
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 87 00 	call	0x10e	; 0x10e <eeprom_read_byte>
 102:	c8 2f       	mov	r28, r24
	
	
    while (1) 
    {
		if(x == 5){
 104:	c5 30       	cpi	r28, 0x05	; 5
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x4a>
			blink();
 108:	0e 94 40 00 	call	0x80	; 0x80 <blink>
 10c:	fb cf       	rjmp	.-10     	; 0x104 <main+0x4a>

0000010e <eeprom_read_byte>:
 10e:	f9 99       	sbic	0x1f, 1	; 31
 110:	fe cf       	rjmp	.-4      	; 0x10e <eeprom_read_byte>
 112:	92 bd       	out	0x22, r25	; 34
 114:	81 bd       	out	0x21, r24	; 33
 116:	f8 9a       	sbi	0x1f, 0	; 31
 118:	99 27       	eor	r25, r25
 11a:	80 b5       	in	r24, 0x20	; 32
 11c:	08 95       	ret

0000011e <eeprom_write_byte>:
 11e:	26 2f       	mov	r18, r22

00000120 <eeprom_write_r18>:
 120:	f9 99       	sbic	0x1f, 1	; 31
 122:	fe cf       	rjmp	.-4      	; 0x120 <eeprom_write_r18>
 124:	1f ba       	out	0x1f, r1	; 31
 126:	92 bd       	out	0x22, r25	; 34
 128:	81 bd       	out	0x21, r24	; 33
 12a:	20 bd       	out	0x20, r18	; 32
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	f8 94       	cli
 130:	fa 9a       	sbi	0x1f, 2	; 31
 132:	f9 9a       	sbi	0x1f, 1	; 31
 134:	0f be       	out	0x3f, r0	; 63
 136:	01 96       	adiw	r24, 0x01	; 1
 138:	08 95       	ret

0000013a <_exit>:
 13a:	f8 94       	cli

0000013c <__stop_program>:
 13c:	ff cf       	rjmp	.-2      	; 0x13c <__stop_program>
