
Buttons_V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000002fc  00000390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800104  00800104  00000394  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000834  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bd  00000000  00000000  00000c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000039b  00000000  00000000  00001335  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  000016d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ad  00000000  00000000  00001734  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000028b  00000000  00000000  00001ae1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001d6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ef       	ldi	r30, 0xFC	; 252
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 30       	cpi	r26, 0x06	; 6
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 46 01 	call	0x28c	; 0x28c <main>
  9e:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <gpioSetPinMode>:
	switch(port) {
		case PB: PINB |= (1 << pin);
		case PC: PINC |= (1 << pin);
		case PD: PIND |= (1 << pin);
	}
}
  a6:	82 30       	cpi	r24, 0x02	; 2
  a8:	c9 f1       	breq	.+114    	; 0x11c <gpioSetPinMode+0x76>
  aa:	83 30       	cpi	r24, 0x03	; 3
  ac:	09 f4       	brne	.+2      	; 0xb0 <gpioSetPinMode+0xa>
  ae:	69 c0       	rjmp	.+210    	; 0x182 <gpioSetPinMode+0xdc>
  b0:	81 30       	cpi	r24, 0x01	; 1
  b2:	09 f0       	breq	.+2      	; 0xb6 <gpioSetPinMode+0x10>
  b4:	98 c0       	rjmp	.+304    	; 0x1e6 <gpioSetPinMode+0x140>
  b6:	41 11       	cpse	r20, r1
  b8:	0d c0       	rjmp	.+26     	; 0xd4 <gpioSetPinMode+0x2e>
  ba:	34 b1       	in	r19, 0x04	; 4
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	06 2e       	mov	r0, r22
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <gpioSetPinMode+0x22>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	0a 94       	dec	r0
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <gpioSetPinMode+0x1e>
  cc:	80 95       	com	r24
  ce:	83 23       	and	r24, r19
  d0:	84 b9       	out	0x04, r24	; 4
  d2:	0b c0       	rjmp	.+22     	; 0xea <gpioSetPinMode+0x44>
  d4:	34 b1       	in	r19, 0x04	; 4
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	06 2e       	mov	r0, r22
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <gpioSetPinMode+0x3c>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	0a 94       	dec	r0
  e4:	e2 f7       	brpl	.-8      	; 0xde <gpioSetPinMode+0x38>
  e6:	83 2b       	or	r24, r19
  e8:	84 b9       	out	0x04, r24	; 4
  ea:	22 23       	and	r18, r18
  ec:	59 f0       	breq	.+22     	; 0x104 <gpioSetPinMode+0x5e>
  ee:	25 b1       	in	r18, 0x05	; 5
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <gpioSetPinMode+0x54>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <gpioSetPinMode+0x50>
  fe:	82 2b       	or	r24, r18
 100:	85 b9       	out	0x05, r24	; 5
 102:	08 95       	ret
 104:	25 b1       	in	r18, 0x05	; 5
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <gpioSetPinMode+0x6a>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <gpioSetPinMode+0x66>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	85 b9       	out	0x05, r24	; 5
 11a:	08 95       	ret
 11c:	41 11       	cpse	r20, r1
 11e:	0d c0       	rjmp	.+26     	; 0x13a <gpioSetPinMode+0x94>
 120:	37 b1       	in	r19, 0x07	; 7
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	06 2e       	mov	r0, r22
 128:	02 c0       	rjmp	.+4      	; 0x12e <gpioSetPinMode+0x88>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <gpioSetPinMode+0x84>
 132:	80 95       	com	r24
 134:	83 23       	and	r24, r19
 136:	87 b9       	out	0x07, r24	; 7
 138:	0b c0       	rjmp	.+22     	; 0x150 <gpioSetPinMode+0xaa>
 13a:	37 b1       	in	r19, 0x07	; 7
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	06 2e       	mov	r0, r22
 142:	02 c0       	rjmp	.+4      	; 0x148 <gpioSetPinMode+0xa2>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <gpioSetPinMode+0x9e>
 14c:	83 2b       	or	r24, r19
 14e:	87 b9       	out	0x07, r24	; 7
 150:	22 23       	and	r18, r18
 152:	59 f0       	breq	.+22     	; 0x16a <gpioSetPinMode+0xc4>
 154:	28 b1       	in	r18, 0x08	; 8
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <gpioSetPinMode+0xba>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <gpioSetPinMode+0xb6>
 164:	82 2b       	or	r24, r18
 166:	88 b9       	out	0x08, r24	; 8
 168:	08 95       	ret
 16a:	28 b1       	in	r18, 0x08	; 8
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <gpioSetPinMode+0xd0>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <gpioSetPinMode+0xcc>
 17a:	80 95       	com	r24
 17c:	82 23       	and	r24, r18
 17e:	88 b9       	out	0x08, r24	; 8
 180:	08 95       	ret
 182:	41 11       	cpse	r20, r1
 184:	0d c0       	rjmp	.+26     	; 0x1a0 <gpioSetPinMode+0xfa>
 186:	3a b1       	in	r19, 0x0a	; 10
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	06 2e       	mov	r0, r22
 18e:	02 c0       	rjmp	.+4      	; 0x194 <gpioSetPinMode+0xee>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <gpioSetPinMode+0xea>
 198:	80 95       	com	r24
 19a:	83 23       	and	r24, r19
 19c:	8a b9       	out	0x0a, r24	; 10
 19e:	0b c0       	rjmp	.+22     	; 0x1b6 <gpioSetPinMode+0x110>
 1a0:	3a b1       	in	r19, 0x0a	; 10
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	06 2e       	mov	r0, r22
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <gpioSetPinMode+0x108>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	0a 94       	dec	r0
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <gpioSetPinMode+0x104>
 1b2:	83 2b       	or	r24, r19
 1b4:	8a b9       	out	0x0a, r24	; 10
 1b6:	22 23       	and	r18, r18
 1b8:	59 f0       	breq	.+22     	; 0x1d0 <gpioSetPinMode+0x12a>
 1ba:	2b b1       	in	r18, 0x0b	; 11
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <gpioSetPinMode+0x120>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <gpioSetPinMode+0x11c>
 1ca:	82 2b       	or	r24, r18
 1cc:	8b b9       	out	0x0b, r24	; 11
 1ce:	08 95       	ret
 1d0:	2b b1       	in	r18, 0x0b	; 11
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <gpioSetPinMode+0x136>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <gpioSetPinMode+0x132>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8b b9       	out	0x0b, r24	; 11
 1e6:	08 95       	ret

000001e8 <gpioSetPin>:


void gpioSetPin(uint8_t port, uint8_t pin, uint8_t value) {
	switch(port) {
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	f1 f0       	breq	.+60     	; 0x228 <gpioSetPin+0x40>
 1ec:	83 30       	cpi	r24, 0x03	; 3
 1ee:	a9 f1       	breq	.+106    	; 0x25a <gpioSetPin+0x72>
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <gpioSetPin+0xe>
 1f4:	4a c0       	rjmp	.+148    	; 0x28a <gpioSetPin+0xa2>
		case PB: PORTB = ((value != 0) ? (PORTB | (1 << pin)) : (PORTB & (~(1 << pin)))); return;
 1f6:	44 23       	and	r20, r20
 1f8:	51 f0       	breq	.+20     	; 0x20e <gpioSetPin+0x26>
 1fa:	25 b1       	in	r18, 0x05	; 5
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <gpioSetPin+0x1e>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <gpioSetPin+0x1a>
 20a:	82 2b       	or	r24, r18
 20c:	0b c0       	rjmp	.+22     	; 0x224 <gpioSetPin+0x3c>
 20e:	95 b1       	in	r25, 0x05	; 5
 210:	21 e0       	ldi	r18, 0x01	; 1
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <gpioSetPin+0x32>
 216:	22 0f       	add	r18, r18
 218:	33 1f       	adc	r19, r19
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <gpioSetPin+0x2e>
 21e:	82 2f       	mov	r24, r18
 220:	80 95       	com	r24
 222:	89 23       	and	r24, r25
 224:	85 b9       	out	0x05, r24	; 5
 226:	08 95       	ret
		case PC: PORTC = ((value != 0) ? (PORTC | (1 << pin)) : (PORTC & (~(1 << pin)))); return;
 228:	44 23       	and	r20, r20
 22a:	51 f0       	breq	.+20     	; 0x240 <gpioSetPin+0x58>
 22c:	28 b1       	in	r18, 0x08	; 8
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <gpioSetPin+0x50>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <gpioSetPin+0x4c>
 23c:	82 2b       	or	r24, r18
 23e:	0b c0       	rjmp	.+22     	; 0x256 <gpioSetPin+0x6e>
 240:	98 b1       	in	r25, 0x08	; 8
 242:	21 e0       	ldi	r18, 0x01	; 1
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <gpioSetPin+0x64>
 248:	22 0f       	add	r18, r18
 24a:	33 1f       	adc	r19, r19
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <gpioSetPin+0x60>
 250:	82 2f       	mov	r24, r18
 252:	80 95       	com	r24
 254:	89 23       	and	r24, r25
 256:	88 b9       	out	0x08, r24	; 8
 258:	08 95       	ret
		case PD: PORTD = ((value != 0) ? (PORTD | (1 << pin)) : (PORTD & (~(1 << pin)))); return;
 25a:	44 23       	and	r20, r20
 25c:	51 f0       	breq	.+20     	; 0x272 <gpioSetPin+0x8a>
 25e:	2b b1       	in	r18, 0x0b	; 11
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <gpioSetPin+0x82>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <gpioSetPin+0x7e>
 26e:	82 2b       	or	r24, r18
 270:	0b c0       	rjmp	.+22     	; 0x288 <gpioSetPin+0xa0>
 272:	9b b1       	in	r25, 0x0b	; 11
 274:	21 e0       	ldi	r18, 0x01	; 1
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <gpioSetPin+0x96>
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <gpioSetPin+0x92>
 282:	82 2f       	mov	r24, r18
 284:	80 95       	com	r24
 286:	89 23       	and	r24, r25
 288:	8b b9       	out	0x0b, r24	; 11
 28a:	08 95       	ret

0000028c <main>:
int repeat = 4;
int x = 0;

int main(void)
{
	/*int*/ pins = 8;
 28c:	88 e0       	ldi	r24, 0x08	; 8
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <pins+0x1>
 294:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <pins>
	/*int*/ repeat = 4;
 298:	84 e0       	ldi	r24, 0x04	; 4
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	DDRD =  PIN0_OUT   | PIN1_OUT   | PIN2_OUT   | PIN3_OUT   | PIN4_OUT   | PIN5_OUT   | PIN6_OUT   | PIN7_OUT;
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	8a b9       	out	0x0a, r24	; 10
	PORTD = PIN0_HIGH  | PIN1_HIGH  | PIN2_HIGH  | PIN3_HIGH  | PIN4_LOW   | PIN5_LOW   | PIN6_LOW   | PIN7_LOW;
 2a8:	8f e0       	ldi	r24, 0x0F	; 15
 2aa:	8b b9       	out	0x0b, r24	; 11

	DDRB =  PIN0_IN    | PIN1_IN    | PIN2_IN    | PIN3_IN    | PIN4_IN    | PIN5_IN    | PIN6_IN    | PIN7_IN;
 2ac:	14 b8       	out	0x04, r1	; 4
	PORTB = PIN0_NOPULL| PIN1_PULLUP| PIN2_PULLUP| PIN3_PULLUP| PIN4_NOPULL| PIN5_NOPULL| PIN6_NOPULL| PIN7_NOPULL;
 2ae:	8e e0       	ldi	r24, 0x0E	; 14
 2b0:	85 b9       	out	0x05, r24	; 5


	/*int*/ x = 2^PIN1_HIGH;
 2b2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 2b6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
	/**/
	for(int pin = 0; pin < pins; pin++){
 2ba:	c0 e0       	ldi	r28, 0x00	; 0
 2bc:	d0 e0       	ldi	r29, 0x00	; 0
 2be:	07 c0       	rjmp	.+14     	; 0x2ce <main+0x42>
		//		gpioSetPinMode(PD, 0, MODE_OUTPUT, LOW);
		gpioSetPinMode(PD, pin, MODE_OUTPUT, HIGH);
 2c0:	21 e0       	ldi	r18, 0x01	; 1
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	6c 2f       	mov	r22, r28
 2c6:	83 e0       	ldi	r24, 0x03	; 3
 2c8:	0e 94 53 00 	call	0xa6	; 0xa6 <gpioSetPinMode>
	PORTB = PIN0_NOPULL| PIN1_PULLUP| PIN2_PULLUP| PIN3_PULLUP| PIN4_NOPULL| PIN5_NOPULL| PIN6_NOPULL| PIN7_NOPULL;


	/*int*/ x = 2^PIN1_HIGH;
	/**/
	for(int pin = 0; pin < pins; pin++){
 2cc:	21 96       	adiw	r28, 0x01	; 1
 2ce:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <pins>
 2d2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <pins+0x1>
 2d6:	c8 17       	cp	r28, r24
 2d8:	d9 07       	cpc	r29, r25
 2da:	94 f3       	brlt	.-28     	; 0x2c0 <main+0x34>
				gpioTogglePin(PD, pin);
				_delay_ms(delay);
			}
		}
		*/
		if(PINB&(1<<PINB0) ){
 2dc:	18 9b       	sbis	0x03, 0	; 3
 2de:	06 c0       	rjmp	.+12     	; 0x2ec <main+0x60>
			gpioSetPin(PD, PIND0, HIGH);
 2e0:	41 e0       	ldi	r20, 0x01	; 1
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	83 e0       	ldi	r24, 0x03	; 3
 2e6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2ea:	f8 cf       	rjmp	.-16     	; 0x2dc <main+0x50>
		}else{
			gpioSetPin(PD, PIND0, LOW);
 2ec:	40 e0       	ldi	r20, 0x00	; 0
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	83 e0       	ldi	r24, 0x03	; 3
 2f2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <gpioSetPin>
 2f6:	f2 cf       	rjmp	.-28     	; 0x2dc <main+0x50>

000002f8 <_exit>:
 2f8:	f8 94       	cli

000002fa <__stop_program>:
 2fa:	ff cf       	rjmp	.-2      	; 0x2fa <__stop_program>
